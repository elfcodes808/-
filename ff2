do local Compkiller=loadstring(game:HttpGet("https://raw.githubusercontent.com/4lpaca-pin/CompKiller/refs/heads/main/src/source.luau"))();local Notifier=Compkiller.newNotify();local ConfigManager=Compkiller:ConfigManager({Directory="Compkiller-UI",Config="ShadowZ-Config"});Compkiller:Loader("rbxassetid://120245531583106",2.5).yield();local Window=Compkiller.new({Name="SHADOWZ",Keybind="LeftAlt",Logo="rbxassetid://120245531583106",Scale=Compkiller.Scale.Window,TextSize=15});Notifier.new({Title="ShadowZ",Content="Best script: SHADOWZ",Duration=4,Icon="rbxassetid://120245531583106"});local Watermark=Window:Watermark();Watermark:AddText({Icon="user",Text="ShadowZ"});Watermark:AddText({Icon="clock",Text=Compkiller:GetDate()});local Time=Watermark:AddText({Icon="timer",Text="TIME"});task.spawn(function() while true do task.wait(1);Time:SetText(Compkiller:GetTimeNow());end end);local Players=game:GetService("Players");local TweenService=game:GetService("TweenService");local UserInputService=game:GetService("UserInputService");local ReplicatedStorage=game:GetService("ReplicatedStorage");local VirtualInputManager=game:GetService("VirtualInputManager");local RunService=game:GetService("RunService");local LocalPlayer=Players.LocalPlayer;local Character=LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait() ;local Humanoid=Character:WaitForChild("Humanoid");local HumanoidRootPart=Character:WaitForChild("HumanoidRootPart");local AC_BYPASS=false;local isCatching=false;local fakeBalls={};local velocity={};local Exploit=identifyexecutor();local Shitsploits={"Solara","Xeno"};loadstring([[
    function LPH_NO_VIRTUALIZE(f) return f end;
]])();if ((game.PlaceId==8204899140) and  not string.match(getexecutorname(),"Solara") and  not string.match(getexecutorname(),"Xeno")) then local Remote=ReplicatedStorage:WaitForChild("Remotes").CharacterSoundEvent;local Handshake=nil;local ShuffleFunction=nil;local AntiCheatCaller=function(caller_script_info) local const_success,consts=pcall(debug.getconstants,caller_script_info.func);if ( not const_success or  not consts) then return false;end local first_const=consts[1];if (typeof(first_const)~="string") then return false;end return first_const:match("_______________________________");end;local MaxAntiCheatCaller=function() for index=1,50 do if  not debug.isvalidlevel(index) then break;end local caller_script_info=debug.getinfo(index);if  not caller_script_info then break;end if  not AntiCheatCaller(caller_script_info) then continue;end return true;end end;local __namecall;__namecall=hookmetamethod(game,"__namecall",LPH_NO_VIRTUALIZE(function(self,...) local Arguments={...};local Method=getnamecallmethod();if (((Method=="FireServer") or (Method=="fireServer")) and (typeof(Arguments[2])=="string") and (typeof(Arguments[3])=="string") and Arguments[3]:match("catch")) then return coroutine.yield();elseif ((Method=="Kick") and (typeof(Arguments[3])=="string") and MaxAntiCheatCaller()) then return coroutine.yield();elseif ((self==RunService) and ((Method=="bindToRenderStep") or (Method=="BindToRenderStep")) and MaxAntiCheatCaller() and (typeof(Arguments[2])=="string")) then return coroutine.yield();end return __namecall(self,...);end));local new;new=hookfunction(debug.info,LPH_NO_VIRTUALIZE(function(...) local Args={...};if ((Args[1]==2) and (Args[2]=="s")) then return "LocaIScript";end return new(...);end));LPH_NO_VIRTUALIZE(function() for index=1,50 do if  not debug.isvalidlevel(index) then break;end local caller_script_info=debug.getinfo(index);if  not caller_script_info then break;end if  not AntiCheatCaller(caller_script_info) then continue;end return true;end end)();local old;if ShuffleFunction then old=hookfunction(ShuffleFunction,LPH_NO_VIRTUALIZE(function(...) local Args={...};local HandShakes={{655,775,633,724,891,666},{760,760,665,771,898,777},{660,759,863,751,771,866}};local Matched=false;for _,value in next,HandShakes do local Match=true;for index,val in next,value do if  not rawequal(Args[index + 1 ],val) then Match=false;break;end end if Match then Matched=true;return old(unpack(Args));end end if  not Matched then return coroutine.yield();end return old(...);end));end task.wait();LPH_NO_VIRTUALIZE(function() for Index,Value in next,getgc(true) do if (type(Value)=="function") then local Info=getinfo(Value);if (Info and Info.source:find("PlayerModule.LocaIScript")) then for Index,Upvalue in next,getupvalues(Value) do if ((type(Upvalue)=="table") and rawget(Upvalue,19)) then local mt=getrawmetatable(Upvalue);if (mt and rawget(mt,"__tostring")) then rawset(mt,"__tostring",nil);end Handshake=Upvalue;end end if table.find({42,51,61},debug.info(Value,"l")) then hookfunction(Value,function(...) end);end end end end end)();LPH_NO_VIRTUALIZE(function() task.spawn(function() while task.wait(0.5) do if Handshake then Remote:FireServer("\240\159\146\177\226\154\149\239\184\143",Handshake,nil);end end end);end)();task.wait();AC_BYPASS=true;end local Remote=ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("CharacterSoundEvent");local firetouchinterestv2=function(part,transmitter,value) if (transmitter and part) then if (value==0) then local tweenInfo=TweenInfo.new(0,Enum.EasingStyle.Linear);local goal={Position=transmitter.Position};local tween=TweenService:Create(part,tweenInfo,goal);tween:Play();end end end;local function findClosestFootball() local closestFootball=nil;local shortestDistance=math.huge;for index,value in next,workspace:GetChildren() do if ((value.Name=="Football") and value:IsA("BasePart")) then local distance=(value.Position-HumanoidRootPart.Position).Magnitude;if (distance<shortestDistance) then closestFootball=value;shortestDistance=distance;end end end return closestFootball;end local function findClosestBall() local lowestDistance=math.huge;local nearestBall=nil;local character=LocalPlayer.Character;if ( not character or  not character:FindFirstChild("HumanoidRootPart")) then return nil;end for _,ball in pairs(workspace:GetChildren()) do if ((ball.Name=="Football") and ball:IsA("BasePart")) then local distance=(ball.Position-character.HumanoidRootPart.Position).Magnitude;if (distance<lowestDistance) then nearestBall=ball;lowestDistance=distance;end end end return nearestBall;end local function getNearestPartToPartFromParts(part,parts) local lowestDistance=math.huge;local nearestPart=nil;for _,p in pairs(parts) do local distance=(part.Position-p.Position).Magnitude;if (distance<lowestDistance) then nearestPart=p;lowestDistance=distance;end end return nearestPart;end local Hitbox=Instance.new("Part");Hitbox.Transparency=0.5;Hitbox.Anchored=true;Hitbox.CanCollide=false;Hitbox.CastShadow=false;local ShadowZ={Magnets={Enabled=false,ShowMagHitbox=false,Delay=0,Radius=0,FreefallCheckEnabled=false,UseActivationTime=false,ActivationTime=0,Mode="Manual",BaseRadius=0,Visuals={Transparency=0.7}},PullVector={Enabled=false,Radius=0,Speed=0,Delay=0},CFramePull={Enabled=false,Radius=0},ResizeHands={Enabled=false,Size=2,Transparency=0},BallResize={Enabled=false,Size=0},Player={JumpPower={Enabled=false,Power=50},AngleEnhancer={Enabled=false,Power=50},CFrameSpeed={Enabled=false,Speed=0}},QBAimbot={Enabled=false,AutoAngle=false,AutoThrowType=false,["95PowerMode"]=false},Configs={Dime=6,Jump=4.5,Mag=9,Slant=1,Comeback=3.5,Still=4},BlockReach={Enabled=false,BlockRange=1,Transparency=0.5},AutoBoost={Enabled=false,Boost=0},AntiOOB={Enabled=false},NoFreeze={Enabled=false},QuickTP={Enabled=false,Speed=0},AntiJam={Enabled=false},NoJumpCooldown={Enabled=false},ClickTackleAimbot={Enabled=false,Radius=0},ResetOnCatch={Enabled=false,Duration=0.5},AutoRush={Enabled=false,Delay=0},AutoCaptain={Enabled=false},AutoSwat={Enabled=false,Range=15},AutoQB={Enabled=false,Type="Teleport"},AutoCatch={Enabled=false,Range=15},AutoJump={Enabled=false},AutoKick={Enabled=false,Accuracy=100,Power=100}};if game:GetService("ReplicatedFirst"):FindFirstChild("LocalScript") then game:GetService("ReplicatedFirst"):FindFirstChild("LocalScript"):Destroy();end Window:DrawCategory({Name="Main"});local CatchingTab=Window:DrawTab({Name="Catching",Icon="rbxassetid://12967596415",EnableScrolling=true});local MagnetsSection=CatchingTab:DrawSection({Name="Magnets",Position="left"});MagnetsSection:AddParagraph({Title="Magnets",Content="Teleports the ball to your hands legitly!"});MagnetsSection:AddToggle({Name="Enabled",Flag="Magnets_Enabled",Default=ShadowZ['Magnets']['Enabled'],Callback=function(Value) ShadowZ['Magnets']['Enabled']=Value;end});MagnetsSection:AddToggle({Name="Show Mag Hitbox",Flag="Magnets_ShowMagHitbox",Default=ShadowZ['Magnets']['ShowMagHitbox'],Callback=function(Value) ShadowZ['Magnets']['ShowMagHitbox']=Value;end});MagnetsSection:AddToggle({Name="Freefall Check",Flag="Magnets_FreefallCheck",Default=ShadowZ['Magnets']['FreefallCheckEnabled'],Callback=function(Value) ShadowZ['Magnets']['FreefallCheckEnabled']=Value;end});MagnetsSection:AddToggle({Name="Use Activation Time",Flag="Magnets_UseActivationTime",Default=ShadowZ['Magnets']['UseActivationTime'],Callback=function(Value) ShadowZ['Magnets']['UseActivationTime']=Value;end});MagnetsSection:AddSlider({Name="Activation Time",Min=0.1,Max=5,Default=ShadowZ['Magnets']['ActivationTime'],Round=0.1,Flag="Magnets_ActivationTime",Callback=function(Value) ShadowZ['Magnets']['ActivationTime']=Value;end});MagnetsSection:AddSlider({Name="Mags Radius",Min=0,Max=25,Default=ShadowZ['Magnets']['Radius'],Round=1,Flag="Magnets_Radius",Callback=function(Value) ShadowZ['Magnets']['Radius']=Value;end});MagnetsSection:AddSlider({Name="Mags Delay",Min=0,Max=15,Default=ShadowZ['Magnets']['Delay'],Round=0.1,Flag="Magnets_Delay",Callback=function(Value) ShadowZ['Magnets']['Delay']=Value;end});local PullVectorSection=CatchingTab:DrawSection({Name="Pull Vector",Position="right"});PullVectorSection:AddParagraph({Title="Pull Vector",Content="Pulls you towards the ball for easier catching!"});PullVectorSection:AddToggle({Name="Enabled",Flag="PullVector_Enabled",Default=ShadowZ['PullVector']['Enabled'],Callback=function(Value) ShadowZ['PullVector']['Enabled']=Value;end});PullVectorSection:AddSlider({Name="Pull Radius",Min=0,Max=25,Default=ShadowZ['PullVector']['Radius'],Round=0.1,Flag="PullVector_Radius",Callback=function(Value) ShadowZ['PullVector']['Radius']=Value;end});PullVectorSection:AddSlider({Name="Pull Speed",Min=0,Max=100,Default=ShadowZ['PullVector']['Speed'],Round=0.1,Flag="PullVector_Speed",Callback=function(Value) ShadowZ['PullVector']['Speed']=Value;end});PullVectorSection:AddSlider({Name="Pull Delay",Min=0,Max=15,Default=ShadowZ['PullVector']['Delay'],Round=0.1,Flag="PullVector_Delay",Callback=function(Value) ShadowZ['PullVector']['Delay']=Value;end});local ResizeHandsSection=CatchingTab:DrawSection({Name="Resize Hands",Position="left"});ResizeHandsSection:AddParagraph({Title="Resize Hands",Content="Increase your hand size for easier catching!"});ResizeHandsSection:AddToggle({Name="Enabled",Flag="ResizeHands_Enabled",Default=ShadowZ['ResizeHands']['Enabled'],Callback=function(Value) ShadowZ['ResizeHands']['Enabled']=Value;end});ResizeHandsSection:AddSlider({Name="Hand Size",Min=0,Max=15,Default=ShadowZ['ResizeHands']['Size'],Round=0.1,Flag="ResizeHands_Size",Callback=function(Value) ShadowZ['ResizeHands']['Size']=Value;end});ResizeHandsSection:AddSlider({Name="Hand Transparency",Min=0,Max=1,Default=ShadowZ['ResizeHands']['Transparency'],Round=0.1,Flag="ResizeHands_Transparency",Callback=function(Value) ShadowZ['ResizeHands']['Transparency']=Value;end});local ResizeFootballSection=CatchingTab:DrawSection({Name="Resize Football",Position="right"});ResizeFootballSection:AddParagraph({Title="Resize Football",Content="Increase your football size for easier catching!"});ResizeFootballSection:AddToggle({Name="Enabled",Flag="BallResize_Enabled",Default=ShadowZ['BallResize']['Enabled'],Callback=function(Value) ShadowZ['BallResize']['Enabled']=Value;end});ResizeFootballSection:AddSlider({Name="Football Size",Min=0,Max=25,Default=ShadowZ['BallResize']['Size'],Round=0.1,Flag="BallResize_Size",Callback=function(Value) ShadowZ['BallResize']['Size']=Value;end});if AC_BYPASS then local CFramePullSection=CatchingTab:DrawSection({Name="CFrame Pull",Position="left"});CFramePullSection:AddParagraph({Title="CFrame Pull",Content="Teleports the humanoidrootpart to the football!"});CFramePullSection:AddToggle({Name="Enabled",Flag="CFramePull_Enabled",Default=ShadowZ['CFramePull']['Enabled'],Callback=function(Value) ShadowZ['CFramePull']['Enabled']=Value;end});CFramePullSection:AddSlider({Name="Pull Radius",Min=0,Max=25,Default=ShadowZ['CFramePull']['Radius'],Round=0.1,Flag="CFramePull_Radius",Callback=function(Value) ShadowZ['CFramePull']['Radius']=Value;end});task.spawn(function() while task.wait(0.05) do local Football=findClosestFootball();if  not Football then continue;end local Distance=(HumanoidRootPart.Position-Football.Position).Magnitude;local Unit=(HumanoidRootPart.Position-Football.Position).Unit;if  not ShadowZ['CFramePull']['Enabled'] then continue;end local Direction=Unit * Distance ;if (Distance<=tonumber(ShadowZ['CFramePull']['Radius'])) then HumanoidRootPart.CFrame=Football.CFrame + Direction ;end end end);end task.spawn(function() local lastActivationTime=0;local lastRadius= -1;local fixedHitboxTransparency=ShadowZ['Magnets']['Visuals']['Transparency'];while task.wait(0.05) do local ball=findClosestFootball();local humanoid=Character:FindFirstChildOfClass("Humanoid");if (ball and ShadowZ['Magnets']['Enabled'] and humanoid) then local freefallCheckPassed=true;if ShadowZ['Magnets']['FreefallCheckEnabled'] then freefallCheckPassed=humanoid:GetState()==Enum.HumanoidStateType.Freefall ;end local activationTimeCheckPassed=true;if ShadowZ['Magnets']['UseActivationTime'] then local currentTime=tick();activationTimeCheckPassed=(currentTime-lastActivationTime)>=ShadowZ['Magnets']['ActivationTime'] ;if activationTimeCheckPassed then lastActivationTime=currentTime;end end if (freefallCheckPassed and activationTimeCheckPassed) then local radius=ShadowZ['Magnets']['Radius'];if (radius~=lastRadius) then Hitbox.Shape=Enum.PartType.Ball;Hitbox.Material=Enum.Material.ForceField;Hitbox.Size=Vector3.new(radius,radius,radius);Hitbox.Color=Color3.fromRGB(0,0,255);Hitbox.Transparency=fixedHitboxTransparency;lastRadius=radius;end Hitbox.Position=ball.Position;Hitbox.Parent=(ShadowZ['Magnets']['ShowMagHitbox'] and workspace) or nil ;task.wait(ShadowZ['Magnets']['Delay']);local distance=(ball.Position-Character:FindFirstChild("HumanoidRootPart").Position).Magnitude;local catchLeft=Character:WaitForChild("CatchLeft",0.1);local catchRight=Character:WaitForChild("CatchRight",0.1);if ( not catchLeft or  not catchRight) then continue;end if (distance<=radius) then firetouchinterestv2(catchLeft,ball,0);firetouchinterestv2(catchRight,ball,0);firetouchinterestv2(catchLeft,ball,1);firetouchinterestv2(catchRight,ball,1);end else Hitbox.Parent=nil;end else Hitbox.Parent=nil;end end end);task.spawn(function() while task.wait(0.05) do if  not ShadowZ['PullVector']['Enabled'] then continue;end for index,value in next,workspace:GetChildren() do if ((value.Name=="Football") and value:IsA("BasePart")) then if ((value.Position.Y<4) or string.find(value.Name,"Kick")) then continue;end local Direction=(value.Position-HumanoidRootPart.Position).unit;local Distance=(HumanoidRootPart.Position-value.Position).Magnitude;task.wait(ShadowZ['PullVector']['Delay']);if (Distance<=tonumber(ShadowZ['PullVector']['Radius'])) then HumanoidRootPart.Velocity=Direction * ShadowZ['PullVector']['Speed'] ;end end end end end);task.spawn(function() local lastHandSize= -1;local lastHandTransparency= -1;while task.wait(0.1) do local LeftArm=LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Left Arm") ;local RightArm=LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Right Arm") ;if ( not LeftArm or  not RightArm) then continue;end if ShadowZ['ResizeHands']['Enabled'] then local currentSize=ShadowZ['ResizeHands']['Size'];local currentTransparency=ShadowZ['ResizeHands']['Transparency'];if ((currentSize~=lastHandSize) or (currentTransparency~=lastHandTransparency)) then LeftArm.Transparency=currentTransparency;RightArm.Transparency=currentTransparency;LeftArm.Size=Vector3.new(LeftArm.Size.X,currentSize,LeftArm.Size.Z);RightArm.Size=Vector3.new(RightArm.Size.X,currentSize,RightArm.Size.Z);lastHandSize=currentSize;lastHandTransparency=currentTransparency;end elseif ((LeftArm.Transparency~=0) or (RightArm.Transparency~=0) or (LeftArm.Size.Y~=2) or (RightArm.Size.Y~=2)) then LeftArm.Transparency=0;RightArm.Transparency=0;LeftArm.Size=Vector3.new(LeftArm.Size.X,2,LeftArm.Size.Z);RightArm.Size=Vector3.new(RightArm.Size.X,2,RightArm.Size.Z);lastHandSize=2;lastHandTransparency=0;end end end);task.spawn(function() local lastBallSize= -1;workspace.ChildAdded:Connect(function(child) if ((child.Name=="Football") and child:IsA("BasePart")) then local function updateBallProperties() if ShadowZ['BallResize']['Enabled'] then local currentSize=ShadowZ['BallResize']['Size'];if (currentSize~=lastBallSize) then child.CanCollide=false;child.Size=Vector3.new(currentSize,currentSize,currentSize);lastBallSize=currentSize;end elseif ((child.CanCollide==false) or (child.Size.X~=1)) then child.CanCollide=true;child.Size=Vector3.new(1,1,1);lastBallSize=1;end end updateBallProperties();local connection1=Compkiller.onFlagChanged("BallResize_Enabled",updateBallProperties);local connection2=Compkiller.onFlagChanged("BallResize_Size",updateBallProperties);child.AncestryChanged:Connect(function(_,parent) if  not parent then connection1:Disconnect();connection2:Disconnect();end end);end end);end);local PlayerTab=Window:DrawTab({Name="Player",Icon="rbxassetid://10747373176",EnableScrolling=true});local JumpPowerSection=PlayerTab:DrawSection({Name="Jump Power",Position="left"});JumpPowerSection:AddParagraph({Title="Jump Power",Content="Increase your jump power for hops!"});JumpPowerSection:AddToggle({Name="Enabled",Flag="JumpPower_Enabled",Default=ShadowZ['Player']['JumpPower']['Enabled'],Callback=function(Value) ShadowZ['Player']['JumpPower']['Enabled']=Value;end});JumpPowerSection:AddSlider({Name="Power",Min=50,Max=60,Default=ShadowZ['Player']['JumpPower']['Power'],Round=0.1,Flag="JumpPower_Power",Callback=function(Value) ShadowZ['Player']['JumpPower']['Power']=Value;end});local AngleEnhancerSection=PlayerTab:DrawSection({Name="Angle Enhancer",Position="right"});AngleEnhancerSection:AddParagraph({Title="Angle Enhancer",Content="It makes you angle 100% of the time!"});AngleEnhancerSection:AddToggle({Name="Enabled",Flag="AngleEnhancer_Enabled",Default=ShadowZ['Player']['AngleEnhancer']['Enabled'],Callback=function(Value) ShadowZ['Player']['AngleEnhancer']['Enabled']=Value;end});AngleEnhancerSection:AddSlider({Name="Power",Min=50,Max=60,Default=ShadowZ['Player']['AngleEnhancer']['Power'],Round=0.1,Flag="AngleEnhancer_Power",Callback=function(Value) ShadowZ['Player']['AngleEnhancer']['Power']=Value;end});local AutoBoostSection=PlayerTab:DrawSection({Name="Auto Boost",Position="right"});AutoBoostSection:AddParagraph({Title="Auto Boost",Content="Able to boost higher then the other player!"});AutoBoostSection:AddToggle({Name="Enabled",Flag="AutoBoost_Enabled",Default=ShadowZ['AutoBoost']['Enabled'],Callback=function(Value) ShadowZ['AutoBoost']['Enabled']=Value;end});AutoBoostSection:AddSlider({Name="Power",Min=0,Max=15,Default=ShadowZ['AutoBoost']['Boost'],Round=0.1,Flag="AutoBoost_Power",Callback=function(Value) ShadowZ['AutoBoost']['Boost']=Value;end});task.spawn(function() local Players=game:GetService("Players");local player=Players.LocalPlayer;local function onLegTouch(otherPart) local character=player.Character;if ( not character or  not ShadowZ['AutoBoost']['Enabled']) then return;end local hrp=character:FindFirstChild("HumanoidRootPart");local otherPlayer=Players:GetPlayerFromCharacter(otherPart.Parent);if (hrp and otherPlayer and (otherPart.Name=="Head")) then local jumpForce=(ShadowZ['AutoBoost']['Boost'] -50) * hrp.AssemblyMass ;hrp:ApplyImpulse(Vector3.new(0,jumpForce,0));end end local function connectLegTouches(character) local leftLeg=character:WaitForChild("Left Leg",5);local rightLeg=character:WaitForChild("Right Leg",5);if leftLeg then leftLeg.Touched:Connect(onLegTouch);end if rightLeg then rightLeg.Touched:Connect(onLegTouch);end end player.CharacterAdded:Connect(connectLegTouches);if player.Character then connectLegTouches(player.Character);end end);if AC_BYPASS then local BlockReachSection=PlayerTab:DrawSection({Name="Block Reach",Position="left"});BlockReachSection:AddParagraph({Title="Block Reach",Content="Increase your block reach"});BlockReachSection:AddToggle({Name="Enabled",Flag="BlockReach_Enabled",Default=ShadowZ['BlockReach']['Enabled'],Callback=function(Value) ShadowZ['BlockReach']['Enabled']=Value;end});BlockReachSection:AddSlider({Name="Reach",Min=1,Max=15,Default=ShadowZ['BlockReach']['BlockRange'],Round=0.1,Flag="BlockReach_Range",Callback=function(Value) ShadowZ['BlockReach']['BlockRange']=Value;end});BlockReachSection:AddSlider({Name="Transparency",Min=0,Max=1,Default=ShadowZ['BlockReach']['Transparency'],Round=0.1,Flag="BlockReach_Transparency",Callback=function(Value) ShadowZ['BlockReach']['Transparency']=Value;end});task.spawn(function() while task.wait(0.1) do local character=LocalPlayer.Character;local blockPart=character and character:FindFirstChild("BlockPart") ;if  not blockPart then continue;end local targetSize=(ShadowZ['BlockReach']['Enabled'] and Vector3.new(ShadowZ['BlockReach']['BlockRange'],ShadowZ['BlockReach']['BlockRange'],ShadowZ['BlockReach']['BlockRange'])) or Vector3.new(0.75,5,1.5) ;if (blockPart.Size~=targetSize) then blockPart.Size=targetSize;end if (blockPart.Transparency~=ShadowZ['BlockReach']['Transparency']) then blockPart.Transparency=ShadowZ['BlockReach']['Transparency'];end end end);end local CFrameSpeedSection=PlayerTab:DrawSection({Name="CFrame Speed",Position="left"});CFrameSpeedSection:AddParagraph({Title="CFrame Speed",Content="Increase your CFrame speed."});CFrameSpeedSection:AddToggle({Name="Enabled",Flag="CFrameSpeed_Enabled",Default=ShadowZ['Player']['CFrameSpeed']['Enabled'],Callback=function(Value) ShadowZ['Player']['CFrameSpeed']['Enabled']=Value;end});CFrameSpeedSection:AddSlider({Name="Speed",Min=0,Max=100,Default=ShadowZ['Player']['CFrameSpeed']['Speed'],Round=0.1,Flag="CFrameSpeed_Speed",Callback=function(Value) ShadowZ['Player']['CFrameSpeed']['Speed']=Value;end});task.spawn(function() while task.wait(0.05) do if (ShadowZ['Player']['CFrameSpeed']['Enabled'] and Humanoid and HumanoidRootPart) then if (Humanoid.MoveDirection.Magnitude>0) then HumanoidRootPart.CFrame+=(Humanoid.MoveDirection * (ShadowZ['Player']['CFrameSpeed']['Speed']/58.5)) end end end end);Character:FindFirstChild("Humanoid").Jumping:Connect(function() if (Character:FindFirstChild("Humanoid"):GetState()~=Enum.HumanoidStateType.Jumping) then task.wait(0.05);if ShadowZ['Player']['JumpPower']['Enabled'] then local jumpForce=(ShadowZ['Player']['JumpPower']['Power'] -50) * Character:FindFirstChild("HumanoidRootPart").AssemblyMass ;Character:FindFirstChild("HumanoidRootPart"):ApplyImpulse(Vector3.new(0,jumpForce,0));end end end);task.spawn(function() local angleTick=os.clock();local oldLookVector=Vector3.new(0,0,0);local shiftLockEnabled=false;local lastEnabled=false;local function hookCharacter(character) local humanoid=character:WaitForChild("Humanoid");local hrp=character:WaitForChild("HumanoidRootPart");humanoid.Jumping:Connect(function() if (humanoid:GetState()~=Enum.HumanoidStateType.Jumping) then return;end if ((os.clock() -angleTick)>0.2) then return;end if  not ShadowZ['Player']['AngleEnhancer']['Enabled'] then return;end task.wait(0.05);local jumpForce=(ShadowZ['Player']['AngleEnhancer']['Power'] -50) * hrp.AssemblyMass ;hrp:ApplyImpulse(Vector3.new(0,jumpForce,0));end);end hookCharacter(Character);LocalPlayer.CharacterAdded:Connect(hookCharacter);UserInputService:GetPropertyChangedSignal("MouseBehavior"):Connect(function() if (UserInputService.MouseBehavior==Enum.MouseBehavior.LockCenter) then shiftLockEnabled=true;else shiftLockEnabled=false;end end);while task.wait(0.05) do local character=LocalPlayer.Character;if  not character then continue;end local hrp=character:FindFirstChild("HumanoidRootPart");if  not hrp then continue;end local humanoid=character:FindFirstChild("Humanoid");if  not humanoid then continue;end local lookVector=hrp.CFrame.LookVector;local difference=(oldLookVector-lookVector).Magnitude;if ( not shiftLockEnabled and lastEnabled) then angleTick=os.clock();end oldLookVector=hrp.CFrame.LookVector;lastEnabled=shiftLockEnabled;end end);local PhysicsTab=Window:DrawTab({Name="Physics",Icon="rbxassetid://10747373176",EnableScrolling=true});local AntiOOBSection=PhysicsTab:DrawSection({Name="Anti OOB",Position="left"});AntiOOBSection:AddParagraph({Title="Anti OOB",Content="Prevents you from going out of bounds."});AntiOOBSection:AddToggle({Name="Enabled",Flag="AntiOOB_Enabled",Default=ShadowZ['AntiOOB']['Enabled'],Callback=function(Value) ShadowZ['AntiOOB']['Enabled']=Value;end});local NoFreezeSection=PhysicsTab:DrawSection({Name="No Freeze",Position="right"});NoFreezeSection:AddParagraph({Title="No Freeze",Content="Prevents your character from being frozen."});NoFreezeSection:AddToggle({Name="Enabled",Flag="NoFreeze_Enabled",Default=ShadowZ['NoFreeze']['Enabled'],Callback=function(Value) ShadowZ['NoFreeze']['Enabled']=Value;end});local QuickTPSection=PhysicsTab:DrawSection({Name="Quick TP",Position="left"});QuickTPSection:AddParagraph({Title="Quick TP",Content="Quickly teleports you forward."});QuickTPSection:AddToggle({Name="Enabled",Flag="QuickTP_Enabled",Default=ShadowZ['QuickTP']['Enabled'],Callback=function(Value) ShadowZ['QuickTP']['Enabled']=Value;end});QuickTPSection:AddSlider({Name="Speed",Min=0,Max=50,Default=ShadowZ['QuickTP']['Speed'],Round=0.1,Flag="QuickTP_Speed",Callback=function(Value) ShadowZ['QuickTP']['Speed']=Value;end});local AntiJamSection=PhysicsTab:DrawSection({Name="Anti Jam",Position="right"});AntiJamSection:AddParagraph({Title="Anti Jam",Content="Prevents being jammed by other players."});AntiJamSection:AddToggle({Name="Enabled",Flag="AntiJam_Enabled",Default=ShadowZ['AntiJam']['Enabled'],Callback=function(Value) ShadowZ['AntiJam']['Enabled']=Value;end});local NoJumpCooldownSection=PhysicsTab:DrawSection({Name="No Jump Cooldown",Position="left"});NoJumpCooldownSection:AddParagraph({Title="No Jump Cooldown",Content="Removes the cooldown between jumps."});NoJumpCooldownSection:AddToggle({Name="Enabled",Flag="NoJumpCooldown_Enabled",Default=ShadowZ['NoJumpCooldown']['Enabled'],Callback=function(Value) ShadowZ['NoJumpCooldown']['Enabled']=Value;end});local ClickTackleAimbotSection=PhysicsTab:DrawSection({Name="Click Tackle Aimbot",Position="right"});ClickTackleAimbotSection:AddParagraph({Title="Click Tackle Aimbot",Content="Aims your tackle at the closest opponent."});ClickTackleAimbotSection:AddToggle({Name="Enabled",Flag="ClickTackleAimbot_Enabled",Default=ShadowZ['ClickTackleAimbot']['Enabled'],Callback=function(Value) ShadowZ['ClickTackleAimbot']['Enabled']=Value;end});ClickTackleAimbotSection:AddSlider({Name="Radius",Min=0,Max=50,Default=ShadowZ['ClickTackleAimbot']['Radius'],Round=0.1,Flag="ClickTackleAimbot_Radius",Callback=function(Value) ShadowZ['ClickTackleAimbot']['Radius']=Value;end});local ResetOnCatchSection=PhysicsTab:DrawSection({Name="Reset On Catch",Position="left"});ResetOnCatchSection:AddParagraph({Title="Reset On Catch",Content="Resets your character after catching the ball."});ResetOnCatchSection:AddToggle({Name="Enabled",Flag="ResetOnCatch_Enabled",Default=ShadowZ['ResetOnCatch']['Enabled'],Callback=function(Value) ShadowZ['ResetOnCatch']['Enabled']=Value;end});ResetOnCatchSection:AddSlider({Name="Duration",Min=0.1,Max=5,Default=ShadowZ['ResetOnCatch']['Duration'],Round=0.1,Flag="ResetOnCatch_Duration",Callback=function(Value) ShadowZ['ResetOnCatch']['Duration']=Value;end});local Boundaries={};local BoundariesFolder=nil;if ( not game.PlaceId==8206123457) then local ModelsFolder=workspace:FindFirstChild("Models");if ModelsFolder then BoundariesFolder=ModelsFolder:FindFirstChild("Boundaries");if BoundariesFolder then for _,Object in ipairs(BoundariesFolder:GetChildren()) do if Object:IsA("BasePart") then table.insert(Boundaries,Object);end end end end end task.spawn(function() while task.wait(0.1) do if ShadowZ['AntiOOB']['Enabled'] then for _,boundary in ipairs(Boundaries) do if (boundary.Parent~=nil) then boundary.Parent=nil;end end elseif BoundariesFolder then for _,boundary in ipairs(Boundaries) do if (boundary.Parent==nil) then boundary.Parent=BoundariesFolder;end end end end end);task.spawn(function() while task.wait(0.1) do if (ShadowZ['NoFreeze']['Enabled'] and Humanoid) then if (Humanoid:GetState()==Enum.HumanoidStateType.Frozen) then Humanoid:ChangeState(Enum.HumanoidStateType.Running);end end end end);local QuickTPCooldown=tick();UserInputService.InputBegan:Connect(function(Input,GameProcessedEvent) if GameProcessedEvent then return;end if (Input.KeyCode~=Enum.KeyCode.F) then return;end if (ShadowZ['QuickTP']['Enabled'] and Humanoid and HumanoidRootPart) then if ((tick() -QuickTPCooldown)>=0.1) then local acceleration=2 + (ShadowZ['QuickTP']['Speed']/4) ;HumanoidRootPart.CFrame+=(Humanoid.MoveDirection * acceleration) QuickTPCooldown=tick();end end end);task.spawn(function() while task.wait(0.1) do if (ShadowZ['AntiJam']['Enabled'] and Character) then local Head=Character:FindFirstChild("Head");local Torso=Character:FindFirstChild("Torso");if (Head and Torso) then Head.CanCollide=false;Torso.CanCollide=false;end elseif Character then local Head=Character:FindFirstChild("Head");local Torso=Character:FindFirstChild("Torso");if (Head and Torso) then Head.CanCollide=true;Torso.CanCollide=true;end end end end);task.spawn(function() while task.wait(0.1) do if (ShadowZ['NoJumpCooldown']['Enabled'] and Humanoid) then Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,true);end end end);local function getBallCarrier() for _,player in ipairs(Players:GetPlayers()) do if ((player.Team~=LocalPlayer.Team) and player.Character and player.Character:FindFirstChildOfClass("Tool")) then return player.Character;end end return nil;end UserInputService.InputBegan:Connect(function(input,gameProcessed) if gameProcessed then return;end if ((input.UserInputType==Enum.UserInputType.MouseButton1) and ShadowZ['ClickTackleAimbot']['Enabled']) then local ballCarrier=getBallCarrier();if (ballCarrier and ballCarrier:FindFirstChild("HumanoidRootPart") and HumanoidRootPart) then local distance=(ballCarrier.HumanoidRootPart.Position-HumanoidRootPart.Position).Magnitude;if (distance<=ShadowZ['ClickTackleAimbot']['Radius']) then HumanoidRootPart.CFrame=ballCarrier.HumanoidRootPart.CFrame;end end end end);local function characterHasFootball() return LocalPlayer.Character and (LocalPlayer.Character:FindFirstChild("Football")~=nil) ;end task.spawn(function() while task.wait(0.1) do if (ShadowZ['ResetOnCatch']['Enabled'] and characterHasFootball()) then task.wait(ShadowZ['ResetOnCatch']['Duration']);if Humanoid then Humanoid.Health=0;end end end end);local ThrowingTab=Window:DrawTab({Name="Throwing",Icon="rbxassetid://12967596415",EnableScrolling=true});local QBAimbotSection=ThrowingTab:DrawSection({Name="QB Aimbot",Position="left"});QBAimbotSection:AddParagraph({Title="QB Aimbot",Content="QB Aimbot literally self explanatory :sob:"});QBAimbotSection:AddToggle({Name="Enabled",Flag="QBAimbot_Enabled",Default=ShadowZ['QBAimbot']['Enabled'],Callback=function(Value) ShadowZ['QBAimbot']['Enabled']=Value;end});QBAimbotSection:AddToggle({Name="Auto Angle",Flag="QBAimbot_AutoAngle",Default=ShadowZ['QBAimbot']['AutoAngle'],Callback=function(Value) ShadowZ['QBAimbot']['AutoAngle']=Value;end});QBAimbotSection:AddToggle({Name="Auto Throw Type",Flag="QBAimbot_AutoThrowType",Default=ShadowZ['QBAimbot']['AutoThrowType'],Callback=function(Value) ShadowZ['QBAimbot']['AutoThrowType']=Value;end});QBAimbotSection:AddToggle({Name="95 Power Mode",Flag="QBAimbot_95PowerMode",Default=ShadowZ['QBAimbot']["95PowerMode"],Callback=function(Value) ShadowZ['QBAimbot']["95PowerMode"]=Value;end});local ConfigsQBSection=ThrowingTab:DrawSection({Name="Configs QB",Position="right"});ConfigsQBSection:AddParagraph({Title="Configs QB",Content="configs for qb literally self explanatory :sob:"});ConfigsQBSection:AddSlider({Name="Dime",Min=0,Max=15,Default=ShadowZ['Configs']['Dime'],Round=0.1,Flag="Configs_Dime",Callback=function(Value) ShadowZ['Configs']['Dime']=Value;end});ConfigsQBSection:AddSlider({Name="Jump",Min=0,Max=15,Default=ShadowZ['Configs']['Jump'],Round=0.1,Flag="Configs_Jump",Callback=function(Value) ShadowZ['Configs']['Jump']=Value;end});ConfigsQBSection:AddSlider({Name="Mag",Min=0,Max=15,Default=ShadowZ['Configs']['Mag'],Round=0.1,Flag="Configs_Mag",Callback=function(Value) ShadowZ['Configs']['Mag']=Value;end});ConfigsQBSection:AddSlider({Name="Slant",Min=0,Max=15,Default=ShadowZ['Configs']['Slant'],Round=0.1,Flag="Configs_Slant",Callback=function(Value) ShadowZ['Configs']['Slant']=Value;end});ConfigsQBSection:AddSlider({Name="Comeback",Min=0,Max=15,Default=ShadowZ['Configs']['Comeback'],Round=0.1,Flag="Configs_Comeback",Callback=function(Value) ShadowZ['Configs']['Comeback']=Value;end});ConfigsQBSection:AddSlider({Name="Still",Min=0,Max=15,Default=ShadowZ['Configs']['Still'],Round=0.1,Flag="Configs_Still",Callback=function(Value) ShadowZ['Configs']['Still']=Value;end});task.spawn(function() local Players=game:GetService("Players");local UserInputService=game:GetService("UserInputService");local Player=Players.LocalPlayer;local Gui=game:GetObjects("rbxassetid://132414359316723")[1];local Mouse=loadstring(game:HttpGet("https://gist.githubusercontent.com/Forexium/85aea5003bfcbfccdd3de6f0d4e9521e/raw/c98681d8b4ad023a2a9d5f9c3386b060406ab4ed/mousing.lua"))();local Locked=false;local Target=nil;local Beam=Instance.new("Beam");Beam.Parent=workspace.Terrain;local Highlight=Instance.new("Highlight");Highlight.FillColor=Color3.fromRGB(0,0,255);Highlight.OutlineColor=Color3.fromRGB(0,0,255);local Attachment0,Attachment1=Instance.new("Attachment"),Instance.new("Attachment");Attachment0.Parent=workspace.Terrain;Attachment1.Parent=workspace.Terrain;Beam.Color=ColorSequence.new(Color3.fromRGB(0,0,255));Beam.Transparency=NumberSequence.new(0);Beam.Attachment0=Attachment0;Beam.Attachment1=Attachment1;Beam.Width0=1.5;Beam.Width1=1.5;Beam.Segments=1750;Beam.Texture="rbxassetid://90867804027693";Beam.TextureSpeed=0;Beam.TextureLength=0;Beam.TextureMode=Enum.TextureMode.Stretch;Beam.Width0=5;Beam.Width1=5;Beam.LightEmission=1;Beam.Brightness=10;Beam.FaceCamera=true;local Data={Angle=40,Power=0,Direction=Vector3.new(0,0,0)};local PassTypeLeads={Dime=ShadowZ['Configs']['Dime'],Jump=ShadowZ['Configs']['Jump'],Mag=ShadowZ['Configs']['Mag'],Slant=ShadowZ['Configs']['Slant'],Comeback=ShadowZ['Configs']['Comeback'],Still=ShadowZ['Configs']['Still']};local PassTypeSwitch={Dime="Jump",Jump="Mag",Mag="Slant",Slant="Comeback",Comeback="Still",Still="Dime"};local PassType="Dime";local WhitelistedMousePart=Instance.new("Part");WhitelistedMousePart.Size=Vector3.new(2048,1,2048);WhitelistedMousePart.Anchored=true;WhitelistedMousePart.Transparency=1;WhitelistedMousePart.Position=Player.Character.HumanoidRootPart.Position-Vector3.new(0,4,0) ;WhitelistedMousePart.CanCollide=false;WhitelistedMousePart.Parent=workspace;local MouseRaycastParams=RaycastParams.new();MouseRaycastParams.FilterType=Enum.RaycastFilterType.Include;MouseRaycastParams.FilterDescendantsInstances={WhitelistedMousePart};Mouse:SetRaycastParams(MouseRaycastParams);local function InverseCosine(Degrees) return math.cos(math.rad(Degrees));end local function CalculateTimeToPeak(From,To,Height) local Gravity=Vector3.new(0, -28,0);local ConversionFactor=4;local XMeters=Height * ConversionFactor ;local A=0.5 * Gravity.Y ;local B=To.Y-From.Y ;local C=XMeters-From.Y ;local Discriminant=(B * B) -(4 * A * C) ;if (Discriminant<0) then return nil;end local T1=( -B + math.sqrt(Discriminant))/(2 * A) ;local T2=( -B-math.sqrt(Discriminant))/(2 * A) ;return math.max(T1,T2);end local function CalculateLanding(Power,Direction) local Origin=Player.Character.Head.Position + (Direction * 5) ;local Velocity=Power * Direction ;local Time=(Velocity.Y/28) * 2 ;return Origin + Vector3.new(Velocity.X * Time ,0,Velocity.Z * Time ) ,Time;end local function FindPossibleCatchers(Power,Direction) local Velocity=Power * Direction ;local Landing,Airtime=CalculateLanding(Power,Direction);local Catchers={};for Index,OtherPlayer in next,Players:GetPlayers() do if (OtherPlayer.Character and OtherPlayer.Character:FindFirstChild("HumanoidRootPart")) then local Distance=(OtherPlayer.Character.HumanoidRootPart.Position-Landing).Magnitude;if (Distance<((20 * Airtime) + 10)) then table.insert(Catchers,OtherPlayer);end end end return Catchers;end local function CalculatePeakHeight(From,To,Angle) local UnitY=1 -InverseCosine(Angle) ;local Distance=(From-To).Magnitude;return UnitY * Distance ;end local function CalculateVelocity(From,To,Time) local Gravity=Vector3.new(0, -28,0);local InitialVelocity=((To-From) -(0.5 * Gravity * Time * Time))/Time ;local Direction=((From + InitialVelocity) -From).Unit;local Power=InitialVelocity.Y/Direction.Y ;return InitialVelocity,Direction,math.clamp(math.round(Power),0,95);end local function FindTarget() local NearestPlayer=nil;local NearestDistance=math.huge;local SearchList={workspace};if workspace:FindFirstChild("npcwr") then table.insert(SearchList,workspace.npcwr.a);table.insert(SearchList,workspace.npcwr.b);end for Index,Parent in next,SearchList do for Index,Child in next,Parent:GetChildren() do if (Child:FindFirstChildWhichIsA("Humanoid") and Child:FindFirstChild("HumanoidRootPart")) then local PlayerInstance=Players:GetPlayerFromCharacter(Child);if (PlayerInstance==Player) then continue;end if ( not PlayerInstance and (game.PlaceId~=8206123457)) then continue;end if ( not Player.Neutral and (PlayerInstance.Team~=Player.Team)) then continue;end local Distance=(Child.HumanoidRootPart.Position-Mouse.Hit.Position).Magnitude;if (Distance<NearestDistance) then NearestDistance=Distance;NearestPlayer=Child;end end end end return NearestPlayer;end local function GetMoveDirection(Target) if Players:GetPlayerFromCharacter(Target) then return Target.Humanoid.MoveDirection;else return (Target.Humanoid.WalkToPoint-Target.Head.Position).Unit;end end local function IsMovingSideways(Target) local MoveDirection=GetMoveDirection(Target);return (math.abs(MoveDirection.X)>0.8) and (math.abs(MoveDirection.Z)<0.2) ;end local function IsMovingStraight(Target) local MoveDirection=GetMoveDirection(Target);return (math.abs(MoveDirection.Z)>0.8) and (math.abs(MoveDirection.X)<0.2) ;end local function IsMovingTowardsQB(Target) local QBPosition=Player.Character.Head.Position;local TargetPosition=Target.HumanoidRootPart.Position;local MoveDirection=GetMoveDirection(Target);local DirectionToQB=(QBPosition-TargetPosition).Unit;return MoveDirection:Dot(DirectionToQB)>0.5 ;end local function IsMovingStill(Target) local MoveDirection=GetMoveDirection(Target);return MoveDirection.Magnitude<=0 ;end local function findClosestDistanceToDB() local closestDis=math.huge;local closestDB=nil;for index,player in next,Players:GetPlayers() do if (player.Team and (player.Team==Players:GetPlayerFromCharacter(Target).Team)) then continue;end if (player.Character==Target) then continue;end if (player.Character and player.Character:FindFirstChild("Head")) then local distance=(player.Character.Head.Position-Target.Head.Position).Magnitude;if (distance<closestDis) then closestDis=distance;closestDB=player.Character;end end end return closestDis,closestDB;end local function AutoAngleCalculation(Distance) local AutoAngle={Dime=function() return math.min(25 + (Distance/10) ,40);end,Slant=function() return 17 + (math.max(Distance-100 ,0)/20) ;end,Comeback=function() return 15 + (math.max(Distance-100 ,0)/20) ;end,Still=function() return 20 + (math.max(Distance-100 ,0)/20) ;end};return (AutoAngle[PassType] or AutoAngle.Dime)();end local function AutoAngleCalculation95Power(distance,route) local IN_AIR=LocalPlayer.Character.Humanoid.FloorMaterial==Enum.Material.Air ;local AutoAngle95={Dime=function() return ((distance>150) and math.max((IN_AIR and (16 + (math.max(distance-100 ,0)/5))) or (14 + (math.max(distance-100 ,0)/5)) ,25)) or (IN_AIR and (16.5 + (math.max(distance,0) * (12.5/150)))) or (14 + (math.max(distance,0) * (12.5/150))) ;end,Slant=function() return 17 + (math.max(distance-100 ,0)/20) ;end,Comeback=function() return 15 + (math.max(distance-100 ,0)/20) ;end,Still=function() return 20 + (math.max(distance-100 ,0)/20) ;end};return (AutoAngle95[route] or AutoAngle95.Dime)();end local function performThrow() local Football=Player.Character:FindFirstChildOfClass("Tool");local Start=Player.Character.Head.Position;local RemoteEvent=Football and Football.Handle:FindFirstChild("RemoteEvent") ;if ( not RemoteEvent or  not RemoteEvent:IsA("RemoteEvent")) then return;end local fakeRemoteEvent=Instance.new("BoolValue");fakeRemoteEvent.Name="RemoteEvent";fakeRemoteEvent.Parent=Football.Handle;if (game.PlaceId==8206123457) then RemoteEvent:fireServer("Clicked",Start,Start + (Data.Direction * 10000) ,Data.Power,Data.Power);else RemoteEvent:fireServer("Clicked",Start,Start + (Data.Direction * 10000) ,1,Data.Power);end end if  not AC_BYPASS then pcall(function() game:GetService("UserInputService").InputBegan:Connect(function(input,gameProcessedEvent) if ( not gameProcessedEvent and Player.PlayerGui:FindFirstChild("BallGui") and (((input.UserInputType==Enum.UserInputType.Keyboard) and (input.KeyCode==Enum.KeyCode.T)) or (input.UserInputType==Enum.UserInputType.MouseButton1))) then performThrow();end end);end);elseif hookmetamethod then local OriginalNamecall;OriginalNamecall=hookmetamethod(game,"__namecall",LPH_NO_VIRTUALIZE(function(Self,...) local Method=getnamecallmethod();local Args={...};if ((Args[1]=="Clicked") and ShadowZ['QBAimbot']['Enabled']) then local NewArgs;if (game.PlaceId==8206123457) then NewArgs={"Clicked",Player.Character.Head.Position,Player.Character.Head.Position + (Data.Direction * 10000) ,((game.PlaceId==8206123457) and Data.Power) or 60 ,Data.Power};else NewArgs={"Clicked",Player.Character.Head.Position,Player.Character.Head.Position + (Data.Direction * 10000) ,1,Data.Power};end return OriginalNamecall(Self,unpack(NewArgs));end return OriginalNamecall(Self,...);end));end UserInputService.InputBegan:Connect(function(Input,GameProcessed) if ( not GameProcessed and Player.PlayerGui:FindFirstChild("BallGui")) then if (Input.KeyCode==Enum.KeyCode.R) then while UserInputService:IsKeyDown(Enum.KeyCode.R) do Data.Angle+=5 Data.Angle=math.clamp(Data.Angle,5,90);task.wait(1/6 );end elseif (Input.KeyCode==Enum.KeyCode.F) then while UserInputService:IsKeyDown(Enum.KeyCode.F) do Data.Angle-=5 Data.Angle=math.clamp(Data.Angle,5,90);task.wait(1/6 );end elseif (Input.KeyCode==Enum.KeyCode.Q) then Locked= not Locked;elseif (Input.KeyCode==Enum.KeyCode.Z) then PassType=PassTypeSwitch[PassType];end end end);local function BeamProjectile(Gravity,InitialVelocity,Origin,Time) local C=0.5 * 0.5 * 0.5 ;local P3=(0.5 * Gravity * Time * Time) + (InitialVelocity * Time) + Origin ;local P2=P3-(((Gravity * Time * Time) + (InitialVelocity * Time))/3) ;local P1=((((C * Gravity * Time * Time) + (0.5 * InitialVelocity * Time) + Origin) -(C * (Origin + P3)))/(3 * C)) -P2 ;local Curve0=(P1-Origin).Magnitude;local Curve1=(P2-P3).Magnitude;local B=(Origin-P3).Unit;local R1=(P1-Origin).Unit;local U1=R1:Cross(B).Unit;local R2=(P2-P3).Unit;local U2=R2:Cross(B).Unit;B=U1:Cross(R1).Unit;local CF1=CFrame.new(Origin.X,Origin.Y,Origin.Z,R1.X,U1.X,B.X,R1.Y,U1.Y,B.Y,R1.Z,U1.Z,B.Z);local CF2=CFrame.new(P3.X,P3.Y,P3.Z,R2.X,U2.X,B.X,R2.Y,U2.Y,B.Y,R2.Z,U2.Z,B.Z);return Curve0, -Curve1,CF1,CF2;end Gui.Enabled=false;Gui.Parent=game:GetService("CoreGui"):FindFirstChild("RobloxGui");task.spawn(function() while task.wait(0.05) do if  not Locked then Target=FindTarget();end if (Target and ShadowZ['QBAimbot']['Enabled'] and Player.PlayerGui:FindFirstChild("BallGui") and Player.Character:FindFirstChild("Head") and Target:FindFirstChild("HumanoidRootPart")) then Gui.Enabled=true;local IN_AIR=LocalPlayer.Character.Humanoid.FloorMaterial==Enum.Material.Air ;local MoveDirection=GetMoveDirection(Target);local AngleAddition=((MoveDirection.Magnitude>0) and 5) or 0 ;local LeadDistance=PassTypeLeads[PassType];local Distance=(Player.Character.Head.Position-Target.HumanoidRootPart.Position).Magnitude;local PeakHeight=CalculatePeakHeight(Player.Character.Head.Position,Target.HumanoidRootPart.Position + (MoveDirection * LeadDistance) ,Data.Angle + AngleAddition );local Time=CalculateTimeToPeak(Player.Character.Head.Position,Target.HumanoidRootPart.Position + (MoveDirection * LeadDistance) ,PeakHeight) or 0.5 ;local Velocity,Direction,Power=CalculateVelocity(Player.Character.Head.Position,Target.HumanoidRootPart.Position + (MoveDirection * 20 * Time) + (MoveDirection * LeadDistance) ,Time);local Catchers=FindPossibleCatchers(Power,Direction);local Landing,Airtime=CalculateLanding(Power,Direction);local Curve0,Curve1,CF1,CF2=BeamProjectile(Vector3.new(0, -28,0),Power * Direction ,Player.Character.Head.Position + (Direction * 5) ,Airtime);local IsInterceptable=false;if ShadowZ['QBAimbot']['AutoAngle'] then Data.Angle=AutoAngleCalculation(Distance,PassType);elseif ShadowZ['QBAimbot']["95PowerMode"] then Data.Angle=AutoAngleCalculation95Power(Distance,PassType);end if ShadowZ['QBAimbot']['AutoThrowType'] then if IsMovingSideways(Target) then PassType="Slant";elseif IsMovingTowardsQB(Target) then PassType="Comeback";elseif ( not IsMovingSideways(Target) and  not IsMovingTowardsQB(Target) and IsMovingStraight(Target)) then local closestDBDistance,_=findClosestDistanceToDB();if (closestDBDistance>5) then PassType="Dime";else PassType="Mag";end elseif IsMovingStill(Target) then PassType="Still";end end for Index,Catcher in next,Catchers do if (Catcher.Team~=Player.Team) then IsInterceptable=true;break;end end if ((Data.Angle>30) and ShadowZ['QBAimbot']["95PowerMode"] and (PassType=="Dime")) then LeadDistance-=(0.5 + (math.min(Data.Angle-30 ,5)/10)) end if (IN_AIR and ShadowZ['QBAimbot']["95PowerMode"]) then LeadDistance+=1 end if (Beam.CurveSize0~=Curve0) then Beam.CurveSize0=Curve0;end if (Beam.CurveSize1~=Curve1) then Beam.CurveSize1=Curve1;end if (Attachment0.CFrame~=(Attachment0.Parent.CFrame:Inverse() * CF1)) then Attachment0.CFrame=Attachment0.Parent.CFrame:Inverse() * CF1 ;end if (Attachment1.CFrame~=(Attachment1.Parent.CFrame:Inverse() * CF2)) then Attachment1.CFrame=Attachment1.Parent.CFrame:Inverse() * CF2 ;end Data.Direction=Direction;Data.Power=Power;Highlight.Parent=Target;Gui.Frame.PowerCard.Power.Text=Power;Gui.Frame.AngleCard.Angle.Text=math.round(Data.Angle * 10 )/10 ;Gui.Frame.CatchableCard.Catchable.Text=(( #Catchers>0) and "Yes") or "No" ;Gui.Frame.InterceptableCard.Interceptable.Text=(IsInterceptable and "Yes") or "No" ;Gui.Frame.PassTypeCard.Type.Text=PassType;Gui.Frame.DistanceCard.Distance.Text=math.round(Distance);else Gui.Enabled=false;Highlight.Parent=nil;Beam.Parent=nil;end end end);end);local AutomaticsTab=Window:DrawTab({Name="Automatics",Icon="rbxassetid://10723407389",EnableScrolling=true});local AutoCatchSection=AutomaticsTab:DrawSection({Name="Auto Catch",Position="left"});AutoCatchSection:AddParagraph({Title="Auto Catch",Content="Automatically catches the ball."});AutoCatchSection:AddToggle({Name="Enabled",Flag="AutoCatch_Enabled",Default=ShadowZ['AutoCatch']['Enabled'],Callback=function(Value) ShadowZ['AutoCatch']['Enabled']=Value;end});AutoCatchSection:AddSlider({Name="Range",Min=0,Max=15,Default=ShadowZ['AutoCatch']['Range'],Round=0.5,Flag="AutoCatch_Range",Callback=function(Value) ShadowZ['AutoCatch']['Range']=Value;end});local AutoCaptainSection=AutomaticsTab:DrawSection({Name="Auto Captain",Position="left"});AutoCaptainSection:AddParagraph({Title="Auto Captain",Content="Automatically finishes captain line race before everybody else to obtain team captain."});AutoCaptainSection:AddToggle({Name="Enabled",Flag="AutoCaptain_Enabled",Default=ShadowZ['AutoCaptain']['Enabled'],Callback=function(Value) ShadowZ['AutoCaptain']['Enabled']=Value;end});local AutoQBSection=AutomaticsTab:DrawSection({Name="Auto QB",Position="right"});AutoQBSection:AddParagraph({Title="Auto QB",Content="Automatically moves/teleports toward the ball when you're quarterback."});AutoQBSection:AddToggle({Name="Enabled",Flag="AutoQB_Enabled",Default=ShadowZ['AutoQB']['Enabled'],Callback=function(Value) ShadowZ['AutoQB']['Enabled']=Value;end});AutoQBSection:AddDropdown({Name="Type",Default=ShadowZ['AutoQB']['Type'],Flag="AutoQB_Type",Values={"Teleport","Walk"},Callback=function(Value) ShadowZ['AutoQB']['Type']=Value;end});local AutoKickSection=AutomaticsTab:DrawSection({Name="Auto Kick",Position="right"});AutoKickSection:AddParagraph({Title="Auto Kick",Content="Automatically kicks the ball with perfect precision & accuracy."});AutoKickSection:AddToggle({Name="Enabled",Flag="AutoKick_Enabled",Default=ShadowZ['AutoKick']['Enabled'],Callback=function(Value) ShadowZ['AutoKick']['Enabled']=Value;end});AutoKickSection:AddSlider({Name="Power",Min=0,Max=100,Default=ShadowZ['AutoKick']['Power'],Round=1,Flag="AutoKick_Power",Callback=function(Value) ShadowZ['AutoKick']['Power']=Value;end});AutoKickSection:AddSlider({Name="Accuracy",Min=0,Max=100,Default=ShadowZ['AutoKick']['Accuracy'],Round=1,Flag="AutoKick_Accuracy",Callback=function(Value) ShadowZ['AutoKick']['Accuracy']=Value;end});local AutoSwatSection=AutomaticsTab:DrawSection({Name="Auto Swat",Position="left"});AutoSwatSection:AddParagraph({Title="Auto Swat",Content="Automatically attempts to swat or block incoming passes when near the ball, improving defensive coverage and reducing completed passes."});AutoSwatSection:AddToggle({Name="Enabled",Flag="AutoSwat_Enabled",Default=ShadowZ['AutoSwat']['Enabled'],Callback=function(Value) ShadowZ['AutoSwat']['Enabled']=Value;end});AutoSwatSection:AddSlider({Name="Range",Min=0.5,Max=15,Default=ShadowZ['AutoSwat']['Range'],Round=1,Flag="AutoSwat_Range",Callback=function(Value) ShadowZ['AutoSwat']['Range']=Value;end});local AutoJumpSection=AutomaticsTab:DrawSection({Name="Auto Jump",Position="right"});AutoJumpSection:AddParagraph({Title="Auto Jump",Content="Automatically attempts to jump when the ball is near."});AutoJumpSection:AddToggle({Name="Enabled",Flag="AutoJump_Enabled",Default=ShadowZ['AutoJump']['Enabled'],Callback=function(Value) ShadowZ['AutoJump']['Enabled']=Value;end});local AutoRushSection=AutomaticsTab:DrawSection({Name="Auto Rush",Position="left"});AutoRushSection:AddParagraph({Title="Auto Rush",Content="Automatically rushes the ball carrier."});AutoRushSection:AddToggle({Name="Enabled",Flag="AutoRush_Enabled",Default=ShadowZ['AutoRush']['Enabled'],Callback=function(Value) ShadowZ['AutoRush']['Enabled']=Value;end});AutoRushSection:AddSlider({Name="Delay",Min=0,Max=10,Default=ShadowZ['AutoRush']['Delay'],Round=0.1,Flag="AutoRush_Delay",Callback=function(Value) ShadowZ['AutoRush']['Delay']=Value;end});local function getBallCarrier() for _,player in ipairs(Players:GetPlayers()) do if ((player.Team~=LocalPlayer.Team) and player.Character and player.Character:FindFirstChildOfClass("Tool")) then return player.Character;end end return nil;end task.spawn(function() while task.wait(0.1) do if ShadowZ['AutoRush']['Enabled'] then local ballCarrier=getBallCarrier();if (ballCarrier and ballCarrier:FindFirstChild("HumanoidRootPart") and Humanoid) then task.wait(ShadowZ['AutoRush']['Delay']);Humanoid:MoveTo(ballCarrier.HumanoidRootPart.Position);end end end end);task.spawn(function() while task.wait(0.05) do local Football=findClosestFootball();if (ShadowZ['AutoCatch']['Enabled'] and Football) then local Distance=(Football.Position-HumanoidRootPart.Position).Magnitude;if (Distance<=ShadowZ['AutoCatch']['Range']) then mouse1click();end end end end);local FinishLine=(( not game.PlaceId==8206123457) and workspace.Models.LockerRoomA.FinishLine) or Instance.new("Part") ;FinishLine:GetPropertyChangedSignal("CFrame"):Connect(function() if (ShadowZ['AutoCaptain']['Enabled'] and (FinishLine.Position.Y>0)) then HumanoidRootPart.CFrame=FinishLine.CFrame + Vector3.new(0,2,0) ;end end);LocalPlayer.PlayerGui.ChildAdded:Connect(function(Child) if ((Child.Name=="KickerGui") and ShadowZ['AutoKick']['Enabled']) then local Cursor=Child:FindFirstChild("Cursor",true);if Cursor then repeat task.wait();until Cursor.Position.Y.Scale<(0.01 + ((100 -ShadowZ['AutoKick']['Power']) * 0.012))  mouse1click();repeat task.wait();until Cursor.Position.Y.Scale>(0.9 -((100 -ShadowZ['AutoKick']['Accuracy']) * 0.001))  mouse1click();end end end);local Blacklisted={"KICKOFF","PUNT","PAT"};task.spawn(function() while task.wait(0.1) do if (ShadowZ['AutoQB']['Enabled'] and (game.PlaceId~=8206123457)) then local Football=workspace:FindFirstChild("Football");local StatusValue=ReplicatedStorage.Flags.Status;local PossessionTag=ReplicatedStorage.Flags.PossessionTag;local StatusTag=ReplicatedStorage.Flags.StatusTag;if (Football and StatusValue and PossessionTag and StatusTag) then local TargetPosition=Football.Position;if (HumanoidRootPart and (StatusValue.Value=="PrePlay") and (PossessionTag.Value==LocalPlayer.Team.Name) and  not table.find(Blacklisted,StatusTag.Value)) then local QBType=ShadowZ['AutoQB']['Type'];if (QBType=="Walk") then Humanoid:MoveTo(Football.Position);elseif (QBType=="Teleport") then HumanoidRootPart.CFrame=CFrame.new(TargetPosition);end end end end end end);task.spawn(function() while task.wait(0.05) do local Football=findClosestBall();if (Football and ShadowZ['AutoSwat']['Enabled']) then local Distance=(HumanoidRootPart.Position-Football.Position).Magnitude;if (Distance<=ShadowZ['AutoSwat']['Range']) then VirtualInputManager:SendKeyEvent(true,Enum.KeyCode.R,false,game);VirtualInputManager:SendKeyEvent(false,Enum.KeyCode.R,false,game);end end end end);local Debounced=false;task.spawn(function() while task.wait(0.05) do local Football=findClosestBall();if (Football and ShadowZ['AutoJump']['Enabled']) then local Distance=(HumanoidRootPart.Position-Football.Position).Magnitude;if ((Distance<=15) and  not Debounced) then Debounced=true;Humanoid:ChangeState(Enum.HumanoidStateType.Jumping);task.delay(1,function() Debounced=false;end);end end end end);local ConfigUI=Window:DrawConfig({Name="Config",Icon="folder",Config=ConfigManager});ConfigUI:Init(); end
