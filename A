-- Load the Rayfield GUI Library
local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Camera = Workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

-- Variables
local silentAimActive = false
local aimbotActive = false
local espActive = false
local fovActive = false
local rapidFire = false
local rapidFireStrength = 5

local espBoxes = {}
local drawBox = true
local drawName = true
local drawHealth = true
local drawTracer = true

local currentOpponent = nil
local fovCircle = Drawing.new("Circle")
local aimbotRange = 150
local aimbotSmoothness = 5
local fovRadius = 100

local aimPartName = "Head"

-- Create Rayfield Window
local Window = Rayfield:CreateWindow({ Name = "ShadowZ Hub | Arsenal V1.0", LoadingTitle = "ShadowZ Hub", LoadingSubtitle = "Arsenal Script", IntroEnabled = false })

-- Tabs
local CombatTab = Window:CreateTab("Combat ‚öîÔ∏è", 4483362458)
local VisualsTab = Window:CreateTab("Visuals üëÄ", 4483362458)
local CreditsTab = Window:CreateTab("Credits üíé", 4483362458)

CombatTab:CreateSection("Main Combat Features")

-- Team check
local function isEnemy(player)
    return player.Team ~= LocalPlayer.Team
end

-- Closest enemy player
local function getOpponent()
    local closest = nil
    local shortestDist = math.huge
    local mousePos = UserInputService:GetMouseLocation()

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and isEnemy(player) and player.Character then
            local part = player.Character:FindFirstChild(aimPartName)
            local hrp = player.Character:FindFirstChild("HumanoidRootPart")
            if part and hrp then
                local screenPos, onScreen = Camera:WorldToViewportPoint(part.Position)
                local dist = (Vector2.new(screenPos.X, screenPos.Y) - mousePos).Magnitude
                local dist3D = (hrp.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude

                if onScreen and dist <= fovRadius and dist3D <= aimbotRange and dist < shortestDist then
                    closest = player
                    shortestDist = dist
                end
            end
        end
    end

    return closest
end

RunService.RenderStepped:Connect(function()
    if aimbotActive or silentAimActive then
        currentOpponent = getOpponent()
    else
        currentOpponent = nil
    end
end)

RunService.RenderStepped:Connect(function()
    if aimbotActive and currentOpponent and currentOpponent.Character then
        local target = currentOpponent.Character:FindFirstChild(aimPartName)
        if target then
            local pos = target.Position + Vector3.new(0, 0.1, 0)
            local cf = CFrame.new(Camera.CFrame.Position, pos)
            Camera.CFrame = Camera.CFrame:Lerp(cf, 1 / aimbotSmoothness)
        end
    end
end)

-- Silent Aim + Rapid Fire
UserInputService.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        if silentAimActive and currentOpponent and currentOpponent.Character then
            local target = currentOpponent.Character:FindFirstChild(aimPartName)
            if target then
                local remote = ReplicatedStorage:FindFirstChild("Remotes")
                local attack = remote and remote:FindFirstChild("Attack")
                if attack then
                    for i = 1, (rapidFire and rapidFireStrength or 1) do
                        Camera.CFrame = CFrame.new(Camera.CFrame.Position, target.Position)
                        attack:FireServer(target)
                    end
                end
            end
        end
    end
end)

-- ESP Drawing
local function updateESP()
    for _, player in pairs(Players:GetPlayers()) do
        local char = player.Character
        if player ~= LocalPlayer and char and isEnemy(player) and char:FindFirstChild("HumanoidRootPart") and char:FindFirstChild("Humanoid") then
            local head = char:FindFirstChild("Head")
            local root = char:FindFirstChild("HumanoidRootPart")
            if head and root then
                local rootPos, rootVisible = Camera:WorldToViewportPoint(root.Position)
                local headPos, headVisible = Camera:WorldToViewportPoint(head.Position + Vector3.new(0, 0.5, 0))

                if not espBoxes[player] then
                    espBoxes[player] = {
                        box = Drawing.new("Quad"),
                        name = Drawing.new("Text"),
                        health = Drawing.new("Text"),
                        tracer = Drawing.new("Line")
                    }
                end

                local box = espBoxes[player]

                if rootVisible and headVisible and espActive then
                    local w, h = 30, (rootPos.Y - headPos.Y) + 15

                    box.box.Visible = drawBox
                    box.box.Color = Color3.fromRGB(255, 0, 0)
                    box.box.Thickness = 2
                    box.box.PointA = Vector2.new(rootPos.X - w / 2, headPos.Y)
                    box.box.PointB = Vector2.new(rootPos.X + w / 2, headPos.Y)
                    box.box.PointC = Vector2.new(rootPos.X + w / 2, rootPos.Y + 15)
                    box.box.PointD = Vector2.new(rootPos.X - w / 2, rootPos.Y + 15)

                    box.name.Visible = drawName
                    box.name.Text = player.Name
                    box.name.Size = 14
                    box.name.Center = true
                    box.name.Outline = true
                    box.name.Color = Color3.fromRGB(255, 0, 0)
                    box.name.Position = Vector2.new(rootPos.X, headPos.Y - 15)

                    box.health.Visible = drawHealth
                    box.health.Text = ("HP: %d"):format(math.floor(char.Humanoid.Health))
                    box.health.Size = 14
                    box.health.Center = true
                    box.health.Outline = true
                    box.health.Color = Color3.fromRGB(0, 255, 0)
                    box.health.Position = Vector2.new(rootPos.X, headPos.Y - 3)

                    box.tracer.Visible = drawTracer
                    box.tracer.Color = Color3.fromRGB(255, 0, 0)
                    box.tracer.Thickness = 1
                    box.tracer.From = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y)
                    box.tracer.To = Vector2.new(rootPos.X, rootPos.Y + 15)
                else
                    for _, v in pairs(box) do v.Visible = false end
                end
            end
        elseif espBoxes[player] then
            for _, v in pairs(espBoxes[player]) do v.Visible = false end
        end
    end
end

RunService.RenderStepped:Connect(function()
    if fovActive then fovCircle.Position = UserInputService:GetMouseLocation() end
    if espActive then updateESP() end
end)

-- Combat UI
CombatTab:CreateToggle({ Name = "üéØ Silent Aim", CurrentValue = false, Callback = function(v) silentAimActive = v end })
CombatTab:CreateToggle({ Name = "üîí Aimbot Lock-On", CurrentValue = false, Callback = function(v) aimbotActive = v end })
CombatTab:CreateSlider({ Name = "üìè Aimbot Range", Range = {50, 300}, Increment = 10, CurrentValue = 150, Callback = function(v) aimbotRange = v end })
CombatTab:CreateSlider({ Name = "‚ö° Aimbot Smoothness", Range = {1, 10}, Increment = 1, CurrentValue = 5, Callback = function(v) aimbotSmoothness = v end })
CombatTab:CreateDropdown({ Name = "üéØ Aim Part", Options = {"Head", "Torso", "Neck"}, CurrentOption = "Head", Callback = function(v) aimPartName = v end })
CombatTab:CreateToggle({ Name = "üî´ Rapid Fire", CurrentValue = false, Callback = function(v) rapidFire = v end })
CombatTab:CreateSlider({ Name = "üí• Fire Strength", Range = {1, 10}, Increment = 1, CurrentValue = 5, Callback = function(v) rapidFireStrength = v end })

-- Visual UI
VisualsTab:CreateToggle({ Name = "üî¥ Enable ESP", CurrentValue = false, Callback = function(v) espActive = v end })
VisualsTab:CreateToggle({ Name = "üü• Show Box", CurrentValue = true, Callback = function(v) drawBox = v end })
VisualsTab:CreateToggle({ Name = "üß† Show Name", CurrentValue = true, Callback = function(v) drawName = v end })
VisualsTab:CreateToggle({ Name = "‚ù§Ô∏è Show Health", CurrentValue = true, Callback = function(v) drawHealth = v end })
VisualsTab:CreateToggle({ Name = "üìç Show Tracer", CurrentValue = true, Callback = function(v) drawTracer = v end })
VisualsTab:CreateToggle({ Name = "üîµ FOV Circle", CurrentValue = false, Callback = function(v) fovActive = v fovCircle.Visible = v end })
VisualsTab:CreateSlider({ Name = "üéØ FOV Size", Range = {50, 200}, Increment = 10, CurrentValue = 100, Callback = function(v) fovRadius = v fovCircle.Radius = v end })

-- FOV Style
fovCircle.Color = Color3.fromRGB(0, 0, 255)
fovCircle.Thickness = 2
fovCircle.Filled = false
fovCircle.Transparency = 1
fovCircle.Visible = false

CreditsTab:CreateSection("Script made by ShadowZ üòé")

print("‚úÖ ShadowZ Hub Arsenal V1.0 Loaded")
